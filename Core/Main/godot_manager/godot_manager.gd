extends Node
class_name GodotManager

# WIP Class
# Not sure if it will really contains "all" nodes from Godot

static var singleton: GodotManager

var logger: Logger

var windows_list: Array[Window]

static func get_singleton() -> GodotManager:
	return singleton

static func is_valid() -> bool:
	return (GodotManager.get_singleton() != null)

func _init():
	singleton = self
	logger = Logger.new("GodotManager")

func link_base(_plugin: ResPlugin):
	
	var _possible_permission = {
		"Node": Node,
		"Object": Object
	}

func link_server(_plugin: ResPlugin):
	
	var _possible_permission = {
		"AudioServer": AudioServer,
		"CameraServer": CameraServer,
		"DisplayServer": DisplayServer,
		"XRServer": XRServer,
		"TCPServer": TCPServer,
		"UDPServer": UDPServer,
		"DTLSServer": DTLSServer,
		"TextServer": TextServer,
		"TextServerAdvanced": TextServerAdvanced,
		"TextServerDummy": TextServerDummy,
		"TextServerExtension": TextServerExtension,
		"TextServerManager": TextServerManager,
		"PhysicsServer2D": PhysicsServer2D,
		"PhysicsServer2DExtension": PhysicsServer2DExtension,
		"PhysicsServer2DManager": PhysicsServer2DManager,
		"PhysicsServer3D": PhysicsServer3D,
		"PhysicsServer3DExtension": PhysicsServer3DExtension,
		"PhysicsServer3DManager": PhysicsServer3DManager,
		"PhysicsServer3DRenderingServerHandler": PhysicsServer3DRenderingServerHandler,
		"RenderingServer": RenderingServer,
		"NavigationServer2D": NavigationServer2D,
		"NavigationServer3D": NavigationServer3D,
		"TranslationServer": TranslationServer,
		"GodotPhysicsServer2D": GodotPhysicsServer2D,
		"GodotPhysicsServer3D": GodotPhysicsServer3D,
		"GodotNavigationServer2D": GodotNavigationServer2D
	}

func link_misc(_plugin: ResPlugin):
	
	var _possible_permission = {
		"CanvasLayer": CanvasLayer,
		"ParallaxBackground": ParallaxBackground
	}

func link_plugin_2D(_plugin: ResPlugin):
	
	var _possible_permission = {
		"Node2D": Node2D,
		"AnimatedSprite2D": AnimatedSprite2D,
		"AudioListener2D": AudioListener2D,
		"AudioStreamPlayer2D": AudioStreamPlayer2D,
		"BackBufferCopy": BackBufferCopy,
		"Bone2D": Bone2D,
		"Camera2D": Camera2D,
		"CanvasGroup": CanvasGroup,
		"CanvasModulate": CanvasModulate,
		"CollisionObject2D": CollisionObject2D,
		"CollisionPolygon2D": CollisionPolygon2D,
		"CollisionShape2D": CollisionShape2D,
		"CPUParticles2D": CPUParticles2D,
		"GPUParticles2D": GPUParticles2D,
		"Joint2D": Joint2D,
		"Light2D": Light2D,
		"LightOccluder2D": LightOccluder2D,
		"Line2D": Line2D,
		"Marker2D": Marker2D,
		"MeshInstance2D": MeshInstance2D,
		"MultiMeshInstance2D": MultiMeshInstance2D,
		"NavigationLink2D": NavigationLink2D,
		"NavigationObstacle2D": NavigationObstacle2D,
		"NavigationRegion2D": NavigationRegion2D,
		"ParallaxLayer": ParallaxLayer,
		"Path2D": Path2D,
		"PathFollow2D": PathFollow2D,
		"Polygon2D": Polygon2D,
		"RayCast2D": RayCast2D,
		"RemoteTransform2D": RemoteTransform2D,
		"ShapeCast2D": ShapeCast2D,
		"Skeleton2D": Skeleton2D,
		"Sprite2D": Sprite2D,
		"TileMap": TileMap,
		"TouchScreenButton": TouchScreenButton,
		"VisibleOnScreenNotifier2D": VisibleOnScreenNotifier2D,
		"Area2D": Area2D,
		"CharacterBody2D": CharacterBody2D,
		"RigidBody2D": RigidBody2D,
		"PhysicalBone2D": PhysicalBone2D,
		"StaticBody2D": StaticBody2D,
		"AnimatableBody2D": AnimatableBody2D,
		"DampedSpringJoint2D": DampedSpringJoint2D,
		"GrooveJoint2D": GrooveJoint2D,
		"PinJoint2D": PinJoint2D,
		"DirectionalLight2D": DirectionalLight2D,
		"PointLight2D": PointLight2D,
		"VisibleOnScreenEnabler2D": VisibleOnScreenEnabler2D
	}

func link_plugin_material(plugin: ResPlugin):
	
	var possible_permission = {
		"FogMaterial": FogMaterial,
		"ORMMaterial3D": ORMMaterial3D,
		"BaseMaterial3D": BaseMaterial3D,
		"ShaderMaterial": ShaderMaterial,
		"Material": Material,
		"PhysicsMaterial": PhysicsMaterial,
		"StandardMaterial3D": StandardMaterial3D,
		"CanvasItemMaterial": CanvasItemMaterial,
		"PanoramaSkyMaterial": PanoramaSkyMaterial,
		"PhysicalSkyMaterial": PhysicalSkyMaterial,
		"PlaceholderMaterial": PlaceholderMaterial,
		"ProceduralSkyMaterial": ProceduralSkyMaterial,
		"ParticleProcessMaterial": ParticleProcessMaterial
	}
	
	var base_permission_root = "GD:MATERIAL"
	
	for permission in possible_permission.keys():
		
		var object = possible_permission[permission]
		
		if plugin.has_allowed(base_permission_root):
			plugin.add_link(permission, object)
			continue
		
		if plugin.has_allowed(str(base_permission_root, ":", permission)):
			plugin.add_link(permission, object)
			continue

func link_plugin_global(plugin: ResPlugin):
	
	var possible_permission = {
		"SIDE_LEFT": SIDE_LEFT,
		"SIDE_BOTTOM": SIDE_BOTTOM,
		"SIDE_RIGHT": SIDE_RIGHT,
		"SIDE_TOP": SIDE_TOP,
		"CORNER_TOP_LEFT": CORNER_TOP_LEFT,
		"CORNER_TOP_RIGHT": CORNER_TOP_RIGHT,
		"CORNER_BOTTOM_LEFT": CORNER_BOTTOM_LEFT,
		"CORNER_BOTTOM_RIGHT": CORNER_BOTTOM_RIGHT,
		"VERTICAL": VERTICAL,
		"HORIZONTAL": HORIZONTAL,
		"CLOCKWISE": CLOCKWISE,
		"COUNTERCLOCKWISE": COUNTERCLOCKWISE,
		"HORIZONTAL_ALIGNMENT_LEFT": HORIZONTAL_ALIGNMENT_LEFT,
		"HORIZONTAL_ALIGNMENT_CENTER": HORIZONTAL_ALIGNMENT_CENTER,
		"HORIZONTAL_ALIGNMENT_RIGHT": HORIZONTAL_ALIGNMENT_RIGHT,
		"HORIZONTAL_ALIGNMENT_FILL": HORIZONTAL_ALIGNMENT_FILL,
		"VERTICAL_ALIGNMENT_TOP": VERTICAL_ALIGNMENT_TOP,
		"VERTICAL_ALIGNMENT_CENTER": VERTICAL_ALIGNMENT_CENTER,
		"VERTICAL_ALIGNMENT_BOTTOM": VERTICAL_ALIGNMENT_BOTTOM,
		"VERTICAL_ALIGNMENT_FILL": VERTICAL_ALIGNMENT_FILL,
		"INLINE_ALIGNMENT_TOP_TO": INLINE_ALIGNMENT_TOP_TO,
		"INLINE_ALIGNMENT_CENTER_TO": INLINE_ALIGNMENT_CENTER_TO,
		"INLINE_ALIGNMENT_BASELINE_TO": INLINE_ALIGNMENT_BASELINE_TO,
		"INLINE_ALIGNMENT_BOTTOM_TO": INLINE_ALIGNMENT_BOTTOM_TO,
		"INLINE_ALIGNMENT_TO_TOP":INLINE_ALIGNMENT_TO_TOP,
		"INLINE_ALIGNMENT_TO_CENTER":INLINE_ALIGNMENT_TO_CENTER,
		"INLINE_ALIGNMENT_TO_BASELINE":INLINE_ALIGNMENT_TO_BASELINE,
		"INLINE_ALIGNMENT_TO_BOTTOM":INLINE_ALIGNMENT_TO_BOTTOM,
		"INLINE_ALIGNMENT_TOP":INLINE_ALIGNMENT_TOP,
		"INLINE_ALIGNMENT_CENTER":INLINE_ALIGNMENT_CENTER,
		"INLINE_ALIGNMENT_BOTTOM":INLINE_ALIGNMENT_BOTTOM,
		"INLINE_ALIGNMENT_IMAGE_MASK":INLINE_ALIGNMENT_IMAGE_MASK,
		"INLINE_ALIGNMENT_TEXT_MASK":INLINE_ALIGNMENT_TEXT_MASK,
		"EULER_ORDER_XYZ": EULER_ORDER_XYZ,
		"EULER_ORDER_XZY": EULER_ORDER_XZY,
		"EULER_ORDER_YXZ": EULER_ORDER_YXZ,
		"EULER_ORDER_YZX": EULER_ORDER_YZX,
		"EULER_ORDER_ZXY": EULER_ORDER_ZXY,
		"EULER_ORDER_ZYX": EULER_ORDER_ZYX,
		"KEY_NONE": KEY_NONE,
		"KEY_SPECIAL": KEY_SPECIAL,
		"KEY_ESCAPE": KEY_ESCAPE,
		"KEY_TAB": KEY_TAB,
		"KEY_BACKTAB": KEY_BACKTAB,
		"KEY_BACKSPACE": KEY_BACKSPACE,
		"KEY_ENTER": KEY_ENTER,
		"KEY_KP_ENTER": KEY_KP_ENTER,
		"KEY_INSERT": KEY_INSERT,
		"KEY_DELETE": KEY_DELETE,
		"KEY_PAUSE": KEY_PAUSE,
		"KEY_PRINT": KEY_PRINT,
		"KEY_SYSREQ": KEY_SYSREQ,
		"KEY_CLEAR": KEY_CLEAR,
		"KEY_HOME": KEY_HOME,
		"KEY_END": KEY_END,
		"KEY_LEFT": KEY_LEFT,
		"KEY_UP": KEY_UP,
		"KEY_RIGHT": KEY_RIGHT,
		"KEY_DOWN": KEY_DOWN,
		"KEY_PAGEUP": KEY_PAGEUP,
		"KEY_PAGEDOWN": KEY_PAGEDOWN,
		"KEY_SHIFT": KEY_SHIFT,
		"KEY_CTRL": KEY_CTRL,
		"KEY_META": KEY_META,
		"KEY_ALT": KEY_ALT,
		"KEY_CAPSLOCK": KEY_CAPSLOCK,
		"KEY_NUMLOCK": KEY_NUMLOCK,
		"KEY_SCROLLLOCK": KEY_SCROLLLOCK,
		"KEY_F1": KEY_F1,
		"KEY_F2": KEY_F2,
		"KEY_F3": KEY_F3,
		"KEY_F4": KEY_F4,
		"KEY_F5": KEY_F5,
		"KEY_F6": KEY_F6,
		"KEY_F7": KEY_F7,
		"KEY_F8": KEY_F8,
		"KEY_F9": KEY_F9,
		"KEY_F10": KEY_F10,
		"KEY_F11": KEY_F11,
		"KEY_F12": KEY_F12,
		"KEY_F13": KEY_F13,
		"KEY_F14": KEY_F14,
		"KEY_F15": KEY_F15,
		"KEY_F16": KEY_F16,
		"KEY_F17": KEY_F17,
		"KEY_F18": KEY_F18,
		"KEY_F19": KEY_F19,
		"KEY_F20": KEY_F20,
		"KEY_F21": KEY_F21,
		"KEY_F22": KEY_F22,
		"KEY_F23": KEY_F23,
		"KEY_F24": KEY_F24,
		"KEY_F25": KEY_F25,
		"KEY_F26": KEY_F26,
		"KEY_F27": KEY_F27,
		"KEY_F28": KEY_F28,
		"KEY_F29": KEY_F29,
		"KEY_F30": KEY_F30,
		"KEY_F31": KEY_F31,
		"KEY_F32": KEY_F32,
		"KEY_F33": KEY_F33,
		"KEY_F34": KEY_F34,
		"KEY_F35": KEY_F35,
		"KEY_KP_MULTIPLY": KEY_KP_MULTIPLY,
		"KEY_KP_DIVIDE": KEY_KP_DIVIDE,
		"KEY_KP_SUBTRACT": KEY_KP_SUBTRACT,
		"KEY_KP_PERIOD": KEY_KP_PERIOD,
		"KEY_KP_ADD": KEY_KP_ADD,
		"KEY_KP_0": KEY_KP_0,
		"KEY_KP_1": KEY_KP_1,
		"KEY_KP_2": KEY_KP_2,
		"KEY_KP_3": KEY_KP_3,
		"KEY_KP_4": KEY_KP_4,
		"KEY_KP_5": KEY_KP_5,
		"KEY_KP_6": KEY_KP_6,
		"KEY_KP_7": KEY_KP_7,
		"KEY_KP_8": KEY_KP_8,
		"KEY_KP_9": KEY_KP_9,
		"KEY_MENU": KEY_MENU,
		"KEY_HYPER": KEY_HYPER,
		"KEY_HELP": KEY_HELP,
		"KEY_BACK": KEY_BACK,
		"KEY_FORWARD": KEY_FORWARD,
		"KEY_STOP": KEY_STOP,
		"KEY_REFRESH": KEY_REFRESH,
		"KEY_VOLUMEDOWN": KEY_VOLUMEDOWN,
		"KEY_VOLUMEMUTE": KEY_VOLUMEMUTE,
		"KEY_VOLUMEUP": KEY_VOLUMEUP,
		"KEY_MEDIAPLAY": KEY_MEDIAPLAY,
		"KEY_MEDIASTOP": KEY_MEDIASTOP,
		"KEY_MEDIAPREVIOUS": KEY_MEDIAPREVIOUS,
		"KEY_MEDIANEXT": KEY_MEDIANEXT,
		"KEY_MEDIARECORD": KEY_MEDIARECORD,
		"KEY_HOMEPAGE": KEY_HOMEPAGE,
		"KEY_FAVORITES": KEY_FAVORITES,
		"KEY_SEARCH": KEY_SEARCH,
		"KEY_STANDBY": KEY_STANDBY,
		"KEY_OPENURL": KEY_OPENURL,
		"KEY_LAUNCHMAIL": KEY_LAUNCHMAIL,
		"KEY_LAUNCHMEDIA": KEY_LAUNCHMEDIA,
		"KEY_LAUNCH0": KEY_LAUNCH0,
		"KEY_LAUNCH1": KEY_LAUNCH1,
		"KEY_LAUNCH2": KEY_LAUNCH2,
		"KEY_LAUNCH3": KEY_LAUNCH3,
		"KEY_LAUNCH4": KEY_LAUNCH4,
		"KEY_LAUNCH5": KEY_LAUNCH5,
		"KEY_LAUNCH6": KEY_LAUNCH6,
		"KEY_LAUNCH7": KEY_LAUNCH7,
		"KEY_LAUNCH8": KEY_LAUNCH8,
		"KEY_LAUNCH9": KEY_LAUNCH9,
		"KEY_LAUNCHA": KEY_LAUNCHA,
		"KEY_LAUNCHB": KEY_LAUNCHB,
		"KEY_LAUNCHC": KEY_LAUNCHC,
		"KEY_LAUNCHD": KEY_LAUNCHD,
		"KEY_LAUNCHE": KEY_LAUNCHE,
		"KEY_LAUNCHF": KEY_LAUNCHF,
		"KEY_GLOBE": KEY_GLOBE,
		"KEY_KEYBOARD": KEY_KEYBOARD,
		"KEY_JIS_EISU": KEY_JIS_EISU,
		"KEY_JIS_KANA": KEY_JIS_KANA,
		"KEY_UNKNOWN": KEY_UNKNOWN,
		"KEY_SPACE": KEY_SPACE,
		"KEY_EXCLAM": KEY_EXCLAM,
		"KEY_QUOTEDBL": KEY_QUOTEDBL,
		"KEY_NUMBERSIGN": KEY_NUMBERSIGN,
		"KEY_DOLLAR": KEY_DOLLAR,
		"KEY_PERCENT": KEY_PERCENT,
		"KEY_AMPERSAND": KEY_AMPERSAND,
		"KEY_APOSTROPHE": KEY_APOSTROPHE,
		"KEY_PARENLEFT": KEY_PARENLEFT,
		"KEY_PARENRIGHT": KEY_PARENRIGHT,
		"KEY_ASTERISK": KEY_ASTERISK,
		"KEY_PLUS": KEY_PLUS,
		"KEY_COMMA": KEY_COMMA,
		"KEY_MINUS": KEY_MINUS,
		"KEY_PERIOD": KEY_PERIOD,
		"KEY_SLASH": KEY_SLASH,
		"KEY_0": KEY_0,
		"KEY_1": KEY_1,
		"KEY_2": KEY_2,
		"KEY_3": KEY_3,
		"KEY_4": KEY_4,
		"KEY_5": KEY_5,
		"KEY_6": KEY_6,
		"KEY_7": KEY_7,
		"KEY_8": KEY_8,
		"KEY_9": KEY_9,
		"KEY_COLON": KEY_COLON,
		"KEY_SEMICOLON": KEY_SEMICOLON,
		"KEY_LESS": KEY_LESS,
		"KEY_EQUAL": KEY_EQUAL,
		"KEY_GREATER": KEY_GREATER,
		"KEY_QUESTION": KEY_QUESTION,
		"KEY_AT": KEY_AT,
		"KEY_A": KEY_A,
		"KEY_B": KEY_B,
		"KEY_C": KEY_C,
		"KEY_D": KEY_D,
		"KEY_E": KEY_E,
		"KEY_F": KEY_F,
		"KEY_G": KEY_G,
		"KEY_H": KEY_H,
		"KEY_I": KEY_I,
		"KEY_J": KEY_J,
		"KEY_K": KEY_K,
		"KEY_L": KEY_L,
		"KEY_M": KEY_M,
		"KEY_N": KEY_N,
		"KEY_O": KEY_O,
		"KEY_P": KEY_P,
		"KEY_Q": KEY_Q,
		"KEY_R": KEY_R,
		"KEY_S": KEY_S,
		"KEY_T": KEY_T,
		"KEY_U": KEY_U,
		"KEY_V": KEY_V,
		"KEY_W": KEY_W,
		"KEY_X": KEY_X,
		"KEY_Y": KEY_Y,
		"KEY_Z": KEY_Z,
		"KEY_BRACKETLEFT": KEY_BRACKETLEFT,
		"KEY_BACKSLASH": KEY_BACKSLASH,
		"KEY_BRACKETRIGHT": KEY_BRACKETRIGHT,
		"KEY_ASCIICIRCUM": KEY_ASCIICIRCUM,
		"KEY_UNDERSCORE": KEY_UNDERSCORE,
		"KEY_QUOTELEFT": KEY_QUOTELEFT,
		"KEY_BRACELEFT": KEY_BRACELEFT,
		"KEY_BAR": KEY_BAR,
		"KEY_BRACERIGHT": KEY_BRACERIGHT,
		"KEY_ASCIITILDE": KEY_ASCIITILDE,
		"KEY_YEN": KEY_YEN,
		"KEY_SECTION": KEY_SECTION,
		"KEY_CODE_MASK": KEY_CODE_MASK,
		"KEY_MODIFIER_MASK": KEY_MODIFIER_MASK,
		"KEY_MASK_CMD_OR_CTRL": KEY_MASK_CMD_OR_CTRL,
		"KEY_MASK_SHIFT": KEY_MASK_SHIFT,
		"KEY_MASK_ALT": KEY_MASK_ALT,
		"KEY_MASK_META": KEY_MASK_META,
		"KEY_MASK_CTRL": KEY_MASK_CTRL,
		"KEY_MASK_KPAD": KEY_MASK_KPAD,
		"KEY_MASK_GROUP_SWITCH": KEY_MASK_GROUP_SWITCH,
		"MOUSE_BUTTON_MASK_LEFT": MOUSE_BUTTON_MASK_LEFT,
		"MOUSE_BUTTON_MASK_RIGHT": MOUSE_BUTTON_MASK_RIGHT,
		"MOUSE_BUTTON_MASK_MIDDLE": MOUSE_BUTTON_MASK_MIDDLE,
		"MOUSE_BUTTON_MASK_MB_XBUTTON1": MOUSE_BUTTON_MASK_MB_XBUTTON1,
		"MOUSE_BUTTON_MASK_MB_XBUTTON2": MOUSE_BUTTON_MASK_MB_XBUTTON2,
		"MOUSE_BUTTON_NONE": MOUSE_BUTTON_NONE,
		"MOUSE_BUTTON_LEFT": MOUSE_BUTTON_LEFT,
		"MOUSE_BUTTON_RIGHT": MOUSE_BUTTON_RIGHT,
		"MOUSE_BUTTON_MIDDLE": MOUSE_BUTTON_MIDDLE,
		"MOUSE_BUTTON_WHEEL_UP": MOUSE_BUTTON_WHEEL_UP,
		"MOUSE_BUTTON_WHEEL_DOWN": MOUSE_BUTTON_WHEEL_DOWN,
		"MOUSE_BUTTON_WHEEL_LEFT": MOUSE_BUTTON_WHEEL_LEFT,
		"MOUSE_BUTTON_WHEEL_RIGHT": MOUSE_BUTTON_WHEEL_RIGHT,
		"MOUSE_BUTTON_XBUTTON1": MOUSE_BUTTON_XBUTTON1,
		"MOUSE_BUTTON_XBUTTON2": MOUSE_BUTTON_XBUTTON2,
		"JOY_BUTTON_INVALID": JOY_BUTTON_INVALID,
		"JOY_BUTTON_A": JOY_BUTTON_A,
		"JOY_BUTTON_B": JOY_BUTTON_B,
		"JOY_BUTTON_X": JOY_BUTTON_X,
		"JOY_BUTTON_Y": JOY_BUTTON_Y,
		"JOY_BUTTON_BACK": JOY_BUTTON_BACK,
		"JOY_BUTTON_GUIDE": JOY_BUTTON_GUIDE,
		"JOY_BUTTON_START": JOY_BUTTON_START,
		"JOY_BUTTON_LEFT_STICK": JOY_BUTTON_LEFT_STICK,
		"JOY_BUTTON_RIGHT_STICK": JOY_BUTTON_RIGHT_STICK,
		"JOY_BUTTON_LEFT_SHOULDER": JOY_BUTTON_LEFT_SHOULDER,
		"JOY_BUTTON_RIGHT_SHOULDER": JOY_BUTTON_RIGHT_SHOULDER,
		"JOY_BUTTON_DPAD_UP": JOY_BUTTON_DPAD_UP,
		"JOY_BUTTON_DPAD_DOWN": JOY_BUTTON_DPAD_DOWN,
		"JOY_BUTTON_DPAD_LEFT": JOY_BUTTON_DPAD_LEFT,
		"JOY_BUTTON_DPAD_RIGHT": JOY_BUTTON_DPAD_RIGHT,
		"JOY_BUTTON_MISC1": JOY_BUTTON_MISC1,
		"JOY_BUTTON_PADDLE1": JOY_BUTTON_PADDLE1,
		"JOY_BUTTON_PADDLE2": JOY_BUTTON_PADDLE2,
		"JOY_BUTTON_PADDLE3": JOY_BUTTON_PADDLE3,
		"JOY_BUTTON_PADDLE4": JOY_BUTTON_PADDLE4,
		"JOY_BUTTON_TOUCHPAD": JOY_BUTTON_TOUCHPAD,
		"JOY_BUTTON_SDL_MAX": JOY_BUTTON_SDL_MAX,
		"JOY_BUTTON_MAX": JOY_BUTTON_MAX,
		"JOY_AXIS_INVALID": JOY_AXIS_INVALID,
		"JOY_AXIS_LEFT_X": JOY_AXIS_LEFT_X,
		"JOY_AXIS_LEFT_Y": JOY_AXIS_LEFT_Y,
		"JOY_AXIS_RIGHT_X": JOY_AXIS_RIGHT_X,
		"JOY_AXIS_RIGHT_Y": JOY_AXIS_RIGHT_Y,
		"JOY_AXIS_TRIGGER_LEFT": JOY_AXIS_TRIGGER_LEFT,
		"JOY_AXIS_TRIGGER_RIGHT": JOY_AXIS_TRIGGER_RIGHT,
		"JOY_AXIS_SDL_MAX": JOY_AXIS_SDL_MAX,
		"JOY_AXIS_MAX": JOY_AXIS_MAX,
		"MIDI_MESSAGE_NONE": MIDI_MESSAGE_NONE,
		"MIDI_MESSAGE_NOTE_OFF": MIDI_MESSAGE_NOTE_OFF,
		"MIDI_MESSAGE_NOTE_ON": MIDI_MESSAGE_NOTE_ON,
		"MIDI_MESSAGE_AFTERTOUCH": MIDI_MESSAGE_AFTERTOUCH,
		"MIDI_MESSAGE_CONTROL_CHANGE": MIDI_MESSAGE_CONTROL_CHANGE,
		"MIDI_MESSAGE_PROGRAM_CHANGE": MIDI_MESSAGE_PROGRAM_CHANGE,
		"MIDI_MESSAGE_CHANNEL_PRESSURE": MIDI_MESSAGE_CHANNEL_PRESSURE,
		"MIDI_MESSAGE_PITCH_BEND": MIDI_MESSAGE_PITCH_BEND,
		"MIDI_MESSAGE_SYSTEM_EXCLUSIVE": MIDI_MESSAGE_SYSTEM_EXCLUSIVE,
		"MIDI_MESSAGE_QUARTER_FRAME": MIDI_MESSAGE_QUARTER_FRAME,
		"MIDI_MESSAGE_SONG_POSITION_POINTER": MIDI_MESSAGE_SONG_POSITION_POINTER,
		"MIDI_MESSAGE_SONG_SELECT": MIDI_MESSAGE_SONG_SELECT,
		"MIDI_MESSAGE_TUNE_REQUEST": MIDI_MESSAGE_TUNE_REQUEST,
		"MIDI_MESSAGE_TIMING_CLOCK": MIDI_MESSAGE_TIMING_CLOCK,
		"MIDI_MESSAGE_START": MIDI_MESSAGE_START,
		"MIDI_MESSAGE_CONTINUE": MIDI_MESSAGE_CONTINUE,
		"MIDI_MESSAGE_STOP": MIDI_MESSAGE_STOP,
		"MIDI_MESSAGE_ACTIVE_SENSING": MIDI_MESSAGE_ACTIVE_SENSING,
		"MIDI_MESSAGE_SYSTEM_RESET": MIDI_MESSAGE_SYSTEM_RESET,
		"OK": OK,
		"FAILED": FAILED,
		"ERR_UNAVAILABLE": ERR_UNAVAILABLE,
		"ERR_UNCONFIGURED": ERR_UNCONFIGURED,
		"ERR_UNAUTHORIZED": ERR_UNAUTHORIZED,
		"ERR_PARAMETER_RANGE_ERROR": ERR_PARAMETER_RANGE_ERROR,
		"ERR_OUT_OF_MEMORY": ERR_OUT_OF_MEMORY,
		"ERR_FILE_NOT_FOUND": ERR_FILE_NOT_FOUND,
		"ERR_FILE_BAD_DRIVE": ERR_FILE_BAD_DRIVE,
		"ERR_FILE_BAD_PATH": ERR_FILE_BAD_PATH,
		"ERR_FILE_NO_PERMISSION": ERR_FILE_NO_PERMISSION,
		"ERR_FILE_ALREADY_IN_USE": ERR_FILE_ALREADY_IN_USE,
		"ERR_FILE_CANT_OPEN": ERR_FILE_CANT_OPEN,
		"ERR_FILE_CANT_WRITE": ERR_FILE_CANT_WRITE,
		"ERR_FILE_CANT_READ": ERR_FILE_CANT_READ,
		"ERR_FILE_UNRECOGNIZED": ERR_FILE_UNRECOGNIZED,
		"ERR_FILE_CORRUPT": ERR_FILE_CORRUPT,
		"ERR_FILE_MISSING_DEPENDENCIES": ERR_FILE_MISSING_DEPENDENCIES,
		"ERR_FILE_EOF": ERR_FILE_EOF,
		"ERR_CANT_OPEN": ERR_CANT_OPEN,
		"ERR_CANT_CREATE": ERR_CANT_CREATE,
		"ERR_QUERY_FAILED": ERR_QUERY_FAILED,
		"ERR_ALREADY_IN_USE": ERR_ALREADY_IN_USE,
		"ERR_LOCKED": ERR_LOCKED,
		"ERR_TIMEOUT": ERR_TIMEOUT,
		"ERR_CANT_CONNECT": ERR_CANT_CONNECT,
		"ERR_CANT_RESOLVE": ERR_CANT_RESOLVE,
		"ERR_CONNECTION_ERROR": ERR_CONNECTION_ERROR,
		"ERR_CANT_ACQUIRE_RESOURCE": ERR_CANT_ACQUIRE_RESOURCE,
		"ERR_CANT_FORK": ERR_CANT_FORK,
		"ERR_INVALID_DATA": ERR_INVALID_DATA,
		"ERR_INVALID_PARAMETER": ERR_INVALID_PARAMETER,
		"ERR_ALREADY_EXISTS": ERR_ALREADY_EXISTS,
		"ERR_DOES_NOT_EXIST": ERR_DOES_NOT_EXIST,
		"ERR_DATABASE_CANT_READ": ERR_DATABASE_CANT_READ,
		"ERR_DATABASE_CANT_WRITE": ERR_DATABASE_CANT_WRITE,
		"ERR_COMPILATION_FAILED": ERR_COMPILATION_FAILED,
		"ERR_METHOD_NOT_FOUND": ERR_METHOD_NOT_FOUND,
		"ERR_LINK_FAILED": ERR_LINK_FAILED,
		"ERR_SCRIPT_FAILED": ERR_SCRIPT_FAILED,
		"ERR_CYCLIC_LINK": ERR_CYCLIC_LINK,
		"ERR_INVALID_DECLARATION": ERR_INVALID_DECLARATION,
		"ERR_DUPLICATE_SYMBOL": ERR_DUPLICATE_SYMBOL,
		"ERR_PARSE_ERROR": ERR_PARSE_ERROR,
		"ERR_BUSY": ERR_BUSY,
		"ERR_SKIP": ERR_SKIP,
		"ERR_HELP": ERR_HELP,
		"ERR_BUG": ERR_BUG,
		"ERR_PRINTER_ON_FIRE": ERR_PRINTER_ON_FIRE,
		"PROPERTY_HINT_NONE": PROPERTY_HINT_NONE,
		"PROPERTY_HINT_RANGE": PROPERTY_HINT_RANGE,
		"PROPERTY_HINT_ENUM": PROPERTY_HINT_ENUM,
		"PROPERTY_HINT_EXP_EASING": PROPERTY_HINT_EXP_EASING,
		"PROPERTY_HINT_LINK": PROPERTY_HINT_LINK,
		"PROPERTY_HINT_FLAGS": PROPERTY_HINT_FLAGS,
		"PROPERTY_HINT_LAYERS_2D_RENDER": PROPERTY_HINT_LAYERS_2D_RENDER,
		"PROPERTY_HINT_LAYERS_2D_PHYSICS": PROPERTY_HINT_LAYERS_2D_PHYSICS,
		"PROPERTY_HINT_LAYERS_2D_NAVIGATION": PROPERTY_HINT_LAYERS_2D_NAVIGATION,
		"PROPERTY_HINT_LAYERS_3D_RENDER": PROPERTY_HINT_LAYERS_3D_RENDER,
		"PROPERTY_HINT_LAYERS_3D_PHYSICS": PROPERTY_HINT_LAYERS_3D_PHYSICS,
		"PROPERTY_HINT_LAYERS_3D_NAVIGATION": PROPERTY_HINT_LAYERS_3D_NAVIGATION,
		"PROPERTY_HINT_LAYERS_AVOIDANCE": PROPERTY_HINT_LAYERS_AVOIDANCE,
		"PROPERTY_HINT_FILE": PROPERTY_HINT_FILE,
		"PROPERTY_HINT_DIR": PROPERTY_HINT_DIR,
		"PROPERTY_HINT_GLOBAL_FILE": PROPERTY_HINT_GLOBAL_FILE,
		"PROPERTY_HINT_GLOBAL_DIR": PROPERTY_HINT_GLOBAL_DIR,
		"PROPERTY_HINT_RESOURCE_TYPE": PROPERTY_HINT_RESOURCE_TYPE,
		"PROPERTY_HINT_MULTILINE_TEXT": PROPERTY_HINT_MULTILINE_TEXT,
		"PROPERTY_HINT_EXPRESSION": PROPERTY_HINT_EXPRESSION,
		"PROPERTY_HINT_PLACEHOLDER_TEXT": PROPERTY_HINT_PLACEHOLDER_TEXT,
		"PROPERTY_HINT_COLOR_NO_ALPHA": PROPERTY_HINT_COLOR_NO_ALPHA,
		"PROPERTY_HINT_OBJECT_ID": PROPERTY_HINT_OBJECT_ID,
		"PROPERTY_HINT_TYPE_STRING": PROPERTY_HINT_TYPE_STRING,
		"PROPERTY_HINT_NODE_PATH_TO_EDITED_NODE": PROPERTY_HINT_NODE_PATH_TO_EDITED_NODE,
		"PROPERTY_HINT_OBJECT_TOO_BIG": PROPERTY_HINT_OBJECT_TOO_BIG,
		"PROPERTY_HINT_NODE_PATH_VALID_TYPES": PROPERTY_HINT_NODE_PATH_VALID_TYPES,
		"PROPERTY_HINT_SAVE_FILE": PROPERTY_HINT_SAVE_FILE,
		"PROPERTY_HINT_GLOBAL_SAVE_FILE": PROPERTY_HINT_GLOBAL_SAVE_FILE,
		"PROPERTY_HINT_INT_IS_OBJECTID": PROPERTY_HINT_INT_IS_OBJECTID,
		"PROPERTY_HINT_INT_IS_POINTER": PROPERTY_HINT_INT_IS_POINTER,
		"PROPERTY_HINT_ARRAY_TYPE": PROPERTY_HINT_ARRAY_TYPE,
		"PROPERTY_HINT_LOCALE_ID": PROPERTY_HINT_LOCALE_ID,
		"PROPERTY_HINT_LOCALIZABLE_STRING": PROPERTY_HINT_LOCALIZABLE_STRING,
		"PROPERTY_HINT_NODE_TYPE": PROPERTY_HINT_NODE_TYPE,
		"PROPERTY_HINT_HIDE_QUATERNION_EDIT": PROPERTY_HINT_HIDE_QUATERNION_EDIT,
		"PROPERTY_HINT_PASSWORD": PROPERTY_HINT_PASSWORD,
		"PROPERTY_HINT_MAX": PROPERTY_HINT_MAX,
		"PROPERTY_USAGE_NONE": PROPERTY_USAGE_NONE,
		"PROPERTY_USAGE_STORAGE": PROPERTY_USAGE_STORAGE,
		"PROPERTY_USAGE_EDITOR": PROPERTY_USAGE_EDITOR,
		"PROPERTY_USAGE_INTERNAL": PROPERTY_USAGE_INTERNAL,
		"PROPERTY_USAGE_CHECKABLE": PROPERTY_USAGE_CHECKABLE,
		"PROPERTY_USAGE_CHECKED": PROPERTY_USAGE_CHECKED,
		"PROPERTY_USAGE_GROUP": PROPERTY_USAGE_GROUP,
		"PROPERTY_USAGE_CATEGORY": PROPERTY_USAGE_CATEGORY,
		"PROPERTY_USAGE_SUBGROUP": PROPERTY_USAGE_SUBGROUP,
		"PROPERTY_USAGE_CLASS_IS_BITFIELD": PROPERTY_USAGE_CLASS_IS_BITFIELD,
		"PROPERTY_USAGE_NO_INSTANCE_STATE": PROPERTY_USAGE_NO_INSTANCE_STATE,
		"PROPERTY_USAGE_RESTART_IF_CHANGED": PROPERTY_USAGE_RESTART_IF_CHANGED,
		"PROPERTY_USAGE_SCRIPT_VARIABLE": PROPERTY_USAGE_SCRIPT_VARIABLE,
		"PROPERTY_USAGE_STORE_IF_NULL": PROPERTY_USAGE_STORE_IF_NULL,
		"PROPERTY_USAGE_UPDATE_ALL_IF_MODIFIED": PROPERTY_USAGE_UPDATE_ALL_IF_MODIFIED,
		"PROPERTY_USAGE_SCRIPT_DEFAULT_VALUE": PROPERTY_USAGE_SCRIPT_DEFAULT_VALUE,
		"PROPERTY_USAGE_CLASS_IS_ENUM": PROPERTY_USAGE_CLASS_IS_ENUM,
		"PROPERTY_USAGE_NIL_IS_VARIANT": PROPERTY_USAGE_NIL_IS_VARIANT,
		"PROPERTY_USAGE_ARRAY": PROPERTY_USAGE_ARRAY,
		"PROPERTY_USAGE_ALWAYS_DUPLICATE": PROPERTY_USAGE_ALWAYS_DUPLICATE,
		"PROPERTY_USAGE_NEVER_DUPLICATE": PROPERTY_USAGE_NEVER_DUPLICATE,
		"PROPERTY_USAGE_HIGH_END_GFX": PROPERTY_USAGE_HIGH_END_GFX,
		"PROPERTY_USAGE_NODE_PATH_FROM_SCENE_ROOT": PROPERTY_USAGE_NODE_PATH_FROM_SCENE_ROOT,
		"PROPERTY_USAGE_RESOURCE_NOT_PERSISTENT": PROPERTY_USAGE_RESOURCE_NOT_PERSISTENT,
		"PROPERTY_USAGE_KEYING_INCREMENTS": PROPERTY_USAGE_KEYING_INCREMENTS,
		"PROPERTY_USAGE_DEFERRED_SET_RESOURCE": PROPERTY_USAGE_DEFERRED_SET_RESOURCE,
		"PROPERTY_USAGE_EDITOR_INSTANTIATE_OBJECT": PROPERTY_USAGE_EDITOR_INSTANTIATE_OBJECT,
		"PROPERTY_USAGE_EDITOR_BASIC_SETTING": PROPERTY_USAGE_EDITOR_BASIC_SETTING,
		"PROPERTY_USAGE_READ_ONLY": PROPERTY_USAGE_READ_ONLY,
		"PROPERTY_USAGE_SECRET": PROPERTY_USAGE_SECRET,
		"PROPERTY_USAGE_DEFAULT": PROPERTY_USAGE_DEFAULT,
		"PROPERTY_USAGE_NO_EDITOR": PROPERTY_USAGE_NO_EDITOR,
		"METHOD_FLAG_NORMAL": METHOD_FLAG_NORMAL,
		"METHOD_FLAG_EDITOR": METHOD_FLAG_EDITOR,
		"METHOD_FLAG_CONST": METHOD_FLAG_CONST,
		"METHOD_FLAG_VIRTUAL": METHOD_FLAG_VIRTUAL,
		"METHOD_FLAG_VARARG": METHOD_FLAG_VARARG,
		"METHOD_FLAG_STATIC": METHOD_FLAG_STATIC,
		"METHOD_FLAG_OBJECT_CORE": METHOD_FLAG_OBJECT_CORE,
		"METHOD_FLAGS_DEFAULT": METHOD_FLAGS_DEFAULT,
		"TYPE_NIL": TYPE_NIL,
		"TYPE_BOOL": TYPE_BOOL,
		"TYPE_INT": TYPE_INT,
		"TYPE_FLOAT": TYPE_FLOAT,
		"TYPE_STRING": TYPE_STRING,
		"TYPE_VECTOR2": TYPE_VECTOR2,
		"TYPE_VECTOR2I": TYPE_VECTOR2I,
		"TYPE_RECT2": TYPE_RECT2,
		"TYPE_RECT2I": TYPE_RECT2I,
		"TYPE_VECTOR3": TYPE_VECTOR3,
		"TYPE_VECTOR3I": TYPE_VECTOR3I,
		"TYPE_TRANSFORM2D": TYPE_TRANSFORM2D,
		"TYPE_VECTOR4": TYPE_VECTOR4,
		"TYPE_VECTOR4I": TYPE_VECTOR4I,
		"TYPE_PLANE": TYPE_PLANE,
		"TYPE_QUATERNION": TYPE_QUATERNION,
		"TYPE_AABB": TYPE_AABB,
		"TYPE_BASIS": TYPE_BASIS,
		"TYPE_TRANSFORM3D": TYPE_TRANSFORM3D,
		"TYPE_PROJECTION": TYPE_PROJECTION,
		"TYPE_COLOR": TYPE_COLOR,
		"TYPE_STRING_NAME": TYPE_STRING_NAME,
		"TYPE_NODE_PATH": TYPE_NODE_PATH,
		"TYPE_RID": TYPE_RID,
		"TYPE_OBJECT": TYPE_OBJECT,
		"TYPE_CALLABLE": TYPE_CALLABLE,
		"TYPE_SIGNAL": TYPE_SIGNAL,
		"TYPE_DICTIONARY": TYPE_DICTIONARY,
		"TYPE_ARRAY": TYPE_ARRAY,
		"TYPE_PACKED_BYTE_ARRAY": TYPE_PACKED_BYTE_ARRAY,
		"TYPE_PACKED_INT32_ARRAY": TYPE_PACKED_INT32_ARRAY,
		"TYPE_PACKED_INT64_ARRAY": TYPE_PACKED_INT64_ARRAY,
		"TYPE_PACKED_FLOAT32_ARRAY": TYPE_PACKED_FLOAT32_ARRAY,
		"TYPE_PACKED_FLOAT64_ARRAY": TYPE_PACKED_FLOAT64_ARRAY,
		"TYPE_PACKED_STRING_ARRAY": TYPE_PACKED_STRING_ARRAY,
		"TYPE_PACKED_VECTOR2_ARRAY": TYPE_PACKED_VECTOR2_ARRAY,
		"TYPE_PACKED_VECTOR3_ARRAY": TYPE_PACKED_VECTOR3_ARRAY,
		"TYPE_PACKED_COLOR_ARRAY": TYPE_PACKED_COLOR_ARRAY,
		"TYPE_MAX": TYPE_MAX,
		"OP_EQUAL": OP_EQUAL,
		"OP_NOT_EQUAL": OP_NOT_EQUAL,
		"OP_LESS": OP_LESS,
		"OP_LESS_EQUAL": OP_LESS_EQUAL,
		"OP_GREATER": OP_GREATER,
		"OP_GREATER_EQUAL": OP_GREATER_EQUAL,
		"OP_ADD": OP_ADD,
		"OP_SUBTRACT": OP_SUBTRACT,
		"OP_MULTIPLY": OP_MULTIPLY,
		"OP_DIVIDE": OP_DIVIDE,
		"OP_NEGATE": OP_NEGATE,
		"OP_POSITIVE": OP_POSITIVE,
		"OP_MODULE": OP_MODULE,
		"OP_POWER": OP_POWER,
		"OP_SHIFT_LEFT": OP_SHIFT_LEFT,
		"OP_SHIFT_RIGHT": OP_SHIFT_RIGHT,
		"OP_BIT_AND": OP_BIT_AND,
		"OP_BIT_OR": OP_BIT_OR,
		"OP_BIT_XOR": OP_BIT_XOR,
		"OP_BIT_NEGATE": OP_BIT_NEGATE,
		"OP_AND": OP_AND,
		"OP_OR": OP_OR,
		"OP_XOR": OP_XOR,
		"OP_NOT": OP_NOT,
		"OP_IN": OP_IN,
		"OP_MAX": OP_MAX
	}
	var base_permission_root = "GD:GLOBAL"
	
	for permission in possible_permission.keys():
		
		var object = possible_permission[permission]
		
		if plugin.has_allowed(base_permission_root):
			plugin.add_link(permission, object)
			continue
		
		if plugin.has_allowed(str(base_permission_root, ":", permission)):
			plugin.add_link(permission, object)
			continue

func link_plugin_texture(plugin: ResPlugin):
	
	var possible_permission = {
		"AnimatedTexture": AnimatedTexture,
		"AtlasTexture": AtlasTexture,
		"CameraTexture": CameraTexture,
		"CanvasTexture": CanvasTexture,
		"CompressedTexture2D": CompressedTexture2D,
		"CompressedTexture2DArray": CompressedTexture2DArray,
		"CompressedTexture3D": CompressedTexture3D,
		"CompressedTextureLayered": CompressedTextureLayered,
		"CurveTexture": CurveTexture,
		"CurveXYZTexture": CurveXYZTexture,
		"GLTFTexture": GLTFTexture,
		"GLTFTextureSampler": GLTFTextureSampler,
		"GradientTexture1D": GradientTexture1D,
		"GradientTexture2D": GradientTexture2D,
		"ImageTexture": ImageTexture,
		"ImageTexture3D": ImageTexture3D,
		"ImageTextureLayered": ImageTextureLayered,
		"MeshTexture": MeshTexture,
		"NoiseTexture2D": NoiseTexture2D,
		"NoiseTexture3D": NoiseTexture3D,
		"PlaceholderTexture2D": PlaceholderTexture2D,
		"PlaceholderTexture2DArray": PlaceholderTexture2DArray,
		"PlaceholderTexture3D": PlaceholderTexture3D,
		"RDTextureFormat": RDTextureFormat,
		"RDTextureView": RDTextureView,
		"Texture": Texture,
		"Texture2D": Texture2D,
		"Texture2DArray": Texture2DArray,
		"Texture2DArrayRD": Texture2DArrayRD,
		"Texture2DRD": Texture2DRD,
		"Texture3D": Texture3D,
		"TextureCubemapArrayRD": TextureCubemapArrayRD,
		"TextureCubemapRD": TextureCubemapRD,
		"TextureLayered": TextureLayered,
		"TextureLayeredRD": TextureLayeredRD,
		"ViewportTexture": ViewportTexture
	}
	var base_permission_root = "GD:TEXTURE"
	
	for permission in possible_permission.keys():
		
		var object = possible_permission[permission]
		
		if plugin.has_allowed(base_permission_root):
			plugin.add_link(permission, object)
			continue
		
		if plugin.has_allowed(str(base_permission_root, ":", permission)):
			plugin.add_link(permission, object)
			continue

func link_plugin_style(plugin: ResPlugin):
	
	var possible_permission = {
		"Theme": Theme,
		"StyleBoxEmpty": StyleBoxEmpty,
		"StyleBoxFlat": StyleBoxFlat,
		"StyleBoxLine": StyleBoxLine,
		"StyleBoxTexture": StyleBoxTexture,
		"Image": Image,
		"Font": Font,
		"FontFile": FontFile,
		"FontVariation": FontVariation,
		"SystemFont": SystemFont,
		"LabelSettings": LabelSettings,
		"RichTextEffect": RichTextEffect
	}
	var base_permission_root = "GD:STYLE"
	
	for permission in possible_permission.keys():
		
		var object = possible_permission[permission]
		
		if plugin.has_allowed(base_permission_root):
			plugin.add_link(permission, object)
			continue
		
		if plugin.has_allowed(str(base_permission_root, ":", permission)):
			plugin.add_link(permission, object)
			continue

func link_plugin_ui(plugin: ResPlugin):
	
	var possible_permission = {
		"Window": Window,
		"Control": Control,
		"CanvasItem": CanvasItem,
		"HScrollBar": HScrollBar,
		"HSeparator": HSeparator,
		"HSlider": HSlider,
		"Container": Container,
		"CenterContainer": CenterContainer,
		"BoxContainer": BoxContainer,
		"TabContainer": TabContainer,
		"FlowContainer": FlowContainer,
		"GridContainer": GridContainer,
		"HBoxContainer": HBoxContainer,
		"VBoxContainer": VBoxContainer,
		"HFlowContainer": HFlowContainer,
		"PanelContainer": PanelContainer,
		"SplitContainer": SplitContainer,
		"VFlowContainer": VFlowContainer,
		"HSplitContainer": HSplitContainer,
		"MarginContainer": MarginContainer,
		"ScrollContainer": ScrollContainer,
		"VSplitContainer": VSplitContainer,
		"AspectRatioContainer": AspectRatioContainer,
		"SubViewportContainer": SubViewportContainer,
		"Button": Button,
		"BaseButton": BaseButton,
		"LinkButton": LinkButton,
		"MenuButton": MenuButton,
		"CheckButton": CheckButton,
		"OptionButton": OptionButton,
		"TextureButton": TextureButton,
		"ColorPickerButton": ColorPickerButton,
		"ButtonGroup": ButtonGroup,
		"Panel": Panel,
		"PopupPanel": PopupPanel,
		"Popup": Popup,
		"PopupMenu": PopupMenu,
		"FileDialog": FileDialog,
		"AcceptDialog": AcceptDialog,
		"ConfirmationDialog": ConfirmationDialog,
		"VideoStreamPlayer": VideoStreamPlayer,
		"VScrollBar": VScrollBar,
		"VSeparator": VSeparator,
		"VSlider": VSlider,
		"CodeEdit": CodeEdit,
		"LineEdit": LineEdit,
		"TextEdit": TextEdit,
		"Label": Label,
		"LabelSettings": LabelSettings,
		"RichTextLabel": RichTextLabel,
		"TextureProgressBar": TextureProgressBar,
		"TextureRect": TextureRect,
		"GraphEdit": GraphEdit,
		"GraphElement": GraphElement,
		"GraphNode": GraphNode,
		"ReferenceRect": ReferenceRect,
		"ColorRect": ColorRect,
		"NinePatchRect": NinePatchRect,
		"Range": Range,
		"ProgressBar": ProgressBar,
		"SpinBox": SpinBox,
		"ItemList": ItemList,
		"TabBar": TabBar,
		"Tree": Tree,
		"Timer": Timer
	}
	
	var base_permission_root = "GD:INTERFACE"
	
	for permission in possible_permission.keys():
		
		var object = possible_permission[permission]
		
		if plugin.has_allowed(base_permission_root):
			plugin.add_link(permission, object)
			continue
		
		if plugin.has_allowed(str(base_permission_root, ":", permission)):
			plugin.add_link(permission, object)
			continue
